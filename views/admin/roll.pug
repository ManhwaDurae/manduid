extends ../layouts/admin.pug

block container-inner
    h1.title 회원명부
    h2.subtitle 회원명부입니다.
    form(method="GET")
        if limit
            input(type="hidden", name="limit", value=limit)
            input#page-input(type="hidden", name="page", value=page)
        .box
            .field.is-horizontal
                .field-label.is-normal
                    label.label 검색어
                .field-body
                    .field.has-addons
                        span.control
                            .select
                                select(name="query_type")
                                    option(value="name", selected= searchInfo.query_type === "name") 성명
                                    option(value="studentId", selected= searchInfo.query_type === "studentId") 학번
                                    option(value="department", selected= searchInfo.query_type === "department") 학과
                                    option(value="phoneNumber", selected= searchInfo.query_type === "phoneNumber") 전화번호
                                    option(value="userId", selected= searchInfo.query_type === "userId") 계정 ID
                        p.control.is-expanded
                            input.input(type="input", name="query", value= searchInfo.query)
            .field.is-horizontal
                .field-label
                    label.label 명부
                .field-body
                    .field.is-narrow
                        .control
                            each displayName, name in rollDisplayNames
                                label.checkbox
                                    input(name="rolls", type="checkbox", value=name, checked= searchInfo.rolls.includes(name))
                                    | &nbsp;#{displayName}
                                |&nbsp;
            .field.is-horizontal
                .field-label
                    label.label 학적
                .field-body
                    .field.is-narrow
                        .control
                            each displayName, status in schoolRegistrationDisplayNames
                                label.checkbox
                                    input(name="schoolRegistration", type="checkbox", value=status, checked = searchInfo.schoolRegistration.includes(status))
                                    | &nbsp;#{displayName}
                                |&nbsp;
            .field.is-horizontal
                .field-label
                .field-body
                    .field.is-grouped
                        .control
                            button.button.is-primary(type="submit") 검색
                        .control
                            button.button(type="submit", name="saveAs", value="excel") 검색 후 저장
        .table-container
            table.table.is-striped.is-fullwidth
                thead
                    tr
                        th 명부
                        th 성명
                        th 학적
                        th 학번
                        th 학과
                        th 전화번호
                        th 계정 ID
                        th 수정
                tbody
                    for i in roll
                        tr
                            td= rollDisplayNames[i.rollType]
                            td= i.member.name
                            td= schoolRegistrationDisplayNames[i.schoolRegistration]
                            td= i.member.studentId
                            td= i.member.department
                            td= i.member.phoneNumber
                            td= i.member.user ? i.member.user.id : ''
                            td
                                a(href="/admin/roll/update/" + i.memberId)
                                    button.button.is-small(type="button") 수정
        
        - page = Number(page)
        - pages = Number(pages)
        if pages > 0
            nav.pagination.roll-pagination(role="navigation", aria-label="페이지 이동")
                if page > 1
                    a.pagination-previous(data-page= page - 1) 이전
                if page < pages
                    a.pagination-next(data-page= page + 1) 다음
                ul.pagination-list
                    if page == 1 && pages == 1
                        li
                            a.pagination-link.is-current(aria-label="첫번째 페이지", data-page= i, aria-current="page")= page
                    else
                        - let first = true, last = true, links = [page - 1, page, page + 1].filter(i => (1 <= i && i <= pages))
                        - while (links[0] > 1 && links.length < 3) links.unshift(links[0] - 1);
                        - while (links[links.length - 1] < pages && links.length < 3) links.push(links[links.length - 1] + 1);
                        - if (links[0] == 1) first = false;
                        - if (links[links.length - 1] == pages) last = false;
                        if first
                            li
                                a.pagination-link(aria-label=`1번째 페이지`, data-page=1) 1
                            li
                                span.pagination-ellipsis &hellip;
                        each i in links
                            li
                                a.pagination-link(aria-label=`${i}번째 페이지`, data-page=i, class={'is-current':page==i})&attributes(page==i?{'aria-current':'page'}:{})= i
                        if last
                            li
                                span.pagination-ellipsis &hellip;
                            li
                                a.pagination-link(aria-label=`${pages}번째 페이지`, data-page=pages)= pages
                    